# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: nawm77/miit-navigation
          tags: ${{ github.sha }}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpit1gb46lt67e5d4r8
          CR_REPOSITORY: miit-navigation
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
      - name: Connect to Yandex Cloud VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 84.201.133.141
          username: rootuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Hello, Yandex Cloud VM!"
            sudo su -
            cd ..
            cd ..
            sudo docker login --username oauth --password ${{ YANDEX_OAUTH }} cr.yandex
            sudo docker rm $(docker stop navigation)
            sudo docker pull cr.yandex/crpit1gb46lt67e5d4r8/miit-navigation:${{ github.sha }}
            cd MIITNavigation-web/
            sudo docker compose up -d